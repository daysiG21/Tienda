{"version":3,"sources":["Views/HomeView.js","Views/AdminView.js","context/authFireContext.js","Views/LoginView.js","routes.js","Componentes/NavAdmin.js","Componentes/NavCliente.js","Componentes/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["HomeView","AdminView","AuthFireContext","createContext","AuthContextProvider","props","useState","userId","setUserId","Provider","value","setAuthUserId","valor","children","LoginView","usuario","setUsuario","password","setPassword","useContext","history","useHistory","className","onSubmit","e","preventDefault","Swal","fire","icon","title","timer","showConfirmButton","then","push","login","type","placeholder","onChange","target","required","Routes","path","exact","component","render","to","NavAdmin","salir","style","cursor","onClick","NavCliente","NavBar","estaColapsado","setEstaColapsado","backgroundColor","data-toggle","data-target","aria-expanded","id","confirmButtonColor","confirmButtonText","showCancelButton","cancelButtonColor","cancelButtonText","result","isDismissed","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"uKAGe,SAASA,IACtB,OACE,8BACE,mDCJS,SAASC,IACtB,OACE,8BACE,oD,WCHOC,EAAkBC,0BAgBhBC,EAda,SAACC,GAAW,IAAD,EACTC,oBAAS,GADA,mBAC9BC,EAD8B,KACtBC,EADsB,KAOrC,OACE,cAACN,EAAgBO,SAAjB,CAA0BC,MAAO,CAACH,SAAQI,cALtB,SAACC,GACrBJ,EAAUI,KAIV,SACGP,EAAMQ,Y,iBCRE,SAASC,IAAa,IAAD,EACJR,mBAAS,IADL,mBAC3BS,EAD2B,KAClBC,EADkB,OAEFV,mBAAS,IAFP,mBAE3BW,EAF2B,KAEjBC,EAFiB,OAIFC,qBAAWjB,GAA5BS,GAJmB,EAI3BJ,OAJ2B,EAInBI,eAEXS,EAAUC,cA2Bd,OACC,gCACG,uCACA,uBAAMC,UAAU,MAAMC,SAAU,SAACC,IA5BvB,SAACA,GACbA,EAAEC,iBACU,SAATV,GACDJ,GAAc,GACde,IAAKC,KAAK,CACRC,KAAK,UACLC,MAAM,mBACNC,MAAM,IACNC,mBAAkB,IAEnBC,MAAK,WACJZ,EAAQa,KAAK,SAIfP,IAAKC,KAAK,CACRC,KAAK,QACLC,MAAM,kBACNC,MAAM,IACNC,mBAAkB,IASoBG,CAAMV,IAA9C,UACE,sBAAKF,UAAU,iBAAf,UACE,uBAAOA,UAAU,aAAjB,qBACA,uBACEA,UAAU,eACVa,KAAK,OACLC,YAAY,QACZ1B,MAAOK,EACPsB,SAAU,SAACb,GAAOR,EAAWQ,EAAEc,OAAO5B,QACtC6B,UAAQ,OAGZ,sBAAKjB,UAAU,iBAAf,UACE,uBAAOA,UAAU,aAAjB,2BACA,uBACEA,UAAU,eACVa,KAAK,WACLC,YAAY,mCACZ1B,MAAOO,EACPoB,SAAU,SAACb,GAAON,EAAYM,EAAEc,OAAO5B,QACvC6B,UAAQ,OAGZ,qBAAKjB,UAAU,iBAAf,SACE,wBAAQa,KAAK,SAASb,UAAU,kBAAhC,8BC1DK,SAASkB,IAAS,IACvBjC,EAAWY,qBAAWjB,GAAtBK,OAER,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CAAOkC,KAAK,IAAIC,OAAK,EAACC,UAAW3C,IACjC,cAAC,IAAD,CAAOyC,KAAK,SAASC,OAAK,EAACC,UAAY1C,IACvC,cAAC,IAAD,CAAOwC,KAAK,SAASC,OAAK,EAACC,UAAY7B,IACvC,cAAC,IAAD,CACE2B,KAAK,IACLC,OAAK,EACLE,OAAQ,WACN,GAAa,GAAVrC,EACD,OAAO,cAAC,IAAD,CAAUsC,GAAG,Y,WCjBjB,SAASC,EAAT,GAA4B,IAATC,EAAQ,EAARA,MAChC,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CAAMzB,UAAU,qBAAqBuB,GAAG,IAAxC,kBACA,cAAC,IAAD,CAAMvB,UAAU,qBAAqBuB,GAAG,SAAxC,mBACA,sBACEvB,UAAU,qBAAqB0B,MAAO,CAACC,OAAO,WAC9CC,QAAS,WAAKH,KAFhB,sBCLS,SAASI,IACtB,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CAAM7B,UAAU,qBAAqBuB,GAAG,IAAxC,kBACA,cAAC,IAAD,CAAMvB,UAAU,qBAAqBuB,GAAG,SAAxC,sBCAS,SAASO,IAAS,IAAD,EACY9C,oBAAS,GADrB,mBACvB+C,EADuB,KACRC,EADQ,OAGEnC,qBAAWjB,GAApCK,EAHuB,EAGvBA,OAAQI,EAHe,EAGfA,cACXS,EAAUC,cAgCd,OACE,qBAAKC,UAAU,wCAAwC0B,MAAO,CAACO,gBAAiB,WAAhF,SACE,sBAAKjC,UAAU,YAAf,UACE,sBAAMA,UAAU,uBAAhB,mBACA,wBACEA,UAAU,iBACVkC,cAAY,WACZC,cAAY,UACZC,iBAAgBL,EAChBH,QA3Ce,kBAAMI,GAAkBD,IAsCzC,SAOC,sBAAM/B,UAAU,0BAEd,qBAAKA,UAAS,UAAK+B,EAAgB,WAAa,GAAlC,oBAAwDM,GAAG,SAAzE,SACU,GAAVpD,EAAkB,cAACuC,EAAD,CAAUC,MA5CvB,WACZrB,IAAKC,KAAK,CACRC,KAAK,UACLC,MAAM,eACNE,mBAAkB,EAClB6B,mBAAoB,UACpBC,kBAAkB,KAClBC,kBAAiB,EACjBC,kBAAmB,OACnBC,iBAAiB,OAElBhC,MAAK,SAACiC,IACqB,IAAvBA,EAAOC,cAIVvD,EAAc,MACZe,IAAKC,KAAK,CACRC,KAAK,UACLC,MAAM,4BACNE,mBAAkB,EAClBD,MAAM,MAEPE,MAAK,WACJZ,EAAQa,KAAK,eAoBoC,cAACkB,EAAD,WClD5C,SAASgB,IACtB,OACE,cAAC,IAAD,UACG,eAAC,EAAD,WACA,cAACf,EAAD,IACD,qBAAK9B,UAAU,YAAf,SACE,cAAC,IAAD,UACE,cAACkB,EAAD,aCdV,IAYe4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAAShC,OACP,cAAC,IAAMiC,WAAP,UACE,cAACV,EAAD,MAEFW,SAASC,eAAe,SAM1BX,M","file":"static/js/main.8b4bd36c.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\n\r\nexport default function HomeView(){\r\n  return (\r\n    <div>\r\n      <h1>Componente Home</h1>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default function AdminView(){\r\n  return (\r\n    <div>\r\n      <h1>Componente Admin</h1>\r\n    </div>\r\n  )\r\n}","import {useState, createContext} from 'react'\r\n\r\nexport const AuthFireContext = createContext() \r\n\r\nconst AuthContextProvider = (props) => {\r\n  const [userId, setUserId] = useState(false) \r\n\r\n  const setAuthUserId = (valor) => { \r\n    setUserId(valor) \r\n  }\r\n\r\n  return(\r\n    <AuthFireContext.Provider value={{userId, setAuthUserId}}>\r\n      {props.children} \r\n    </AuthFireContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AuthContextProvider","import React, {useState, useContext} from 'react' \r\nimport {AuthFireContext} from '../context/authFireContext'\r\nimport Swal from 'sweetalert2'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nexport default function LoginView() {\r\n  const [usuario, setUsuario] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const {userId, setAuthUserId} = useContext(AuthFireContext) \r\n  \r\n  let history = useHistory()\r\n\r\n  const login = (e) => {\r\n    e.preventDefault()\r\n    if(usuario==\"daysi\"){\r\n      setAuthUserId(true) \r\n      Swal.fire({ \r\n        icon:'success',\r\n        title:'Acceso Permitido',\r\n        timer:2000,\r\n        showConfirmButton:false\r\n      })\r\n      .then(()=>{\r\n        history.push('/')\r\n      })\r\n    }\r\n    else{\r\n      Swal.fire({\r\n        icon:'error',\r\n        title:'Acceso denegado',\r\n        timer:2000,\r\n        showConfirmButton:false\r\n      })\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n   <div>\r\n      <h1>Login</h1>\r\n      <form className=\"row\" onSubmit={(e) => {login(e)}}>    \r\n        <div className=\"col-sm-12 mb-3\">\r\n          <label className=\"form-label\">Usuario</label>\r\n          <input \r\n            className=\"form-control\" \r\n            type=\"text\" \r\n            placeholder=\"daysi\"\r\n            value={usuario}\r\n            onChange={(e) => {setUsuario(e.target.value)}}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"col-sm-12 mb-3\">\r\n          <label className=\"form-label\">Contraseña</label>\r\n          <input \r\n            className=\"form-control\" \r\n            type=\"password\" \r\n            placeholder=\"Ingrese una contraseña segura\"\r\n            value={password}\r\n            onChange={(e) => {setPassword(e.target.value)}}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"col-sm-12 mb-3\"> \r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Ingresar\r\n          </button>\r\n        </div>     \r\n      </form>\r\n    </div>\r\n  )\r\n}","import React,{Fragment, useContext} from 'react'\r\nimport {Route,Redirect} from \"react-router-dom\"\r\nimport HomeView from './Views/HomeView'\r\nimport AdminView from './Views/AdminView'\r\nimport LoginView from './Views/LoginView'\r\nimport { AuthFireContext } from \"./context/authFireContext\";\r\n\r\nexport default function Routes(){\r\n  const { userId } = useContext(AuthFireContext);\r\n\r\n  return(\r\n    <Fragment>\r\n      <Route path=\"/\" exact component={HomeView} />\r\n      <Route path=\"/admin\" exact component ={AdminView}/>\r\n      <Route path=\"/login\" exact component ={LoginView}/>\r\n      <Route\r\n        path=\"/\"\r\n        exact\r\n        render={() => {\r\n          if(userId == false){\r\n            return <Redirect to='/'/>\r\n          }\r\n        }}\r\n      />\r\n    </Fragment>\r\n  )\r\n}","import React,{Fragment} from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function NavAdmin({salir}) {\r\n  return (\r\n    <Fragment>   \r\n      <Link className=\"nav-link text-dark\" to='/'>Home</Link> \r\n      <Link className=\"nav-link text-dark\" to='/admin'>Admin</Link>     \r\n      <span \r\n        className=\"nav-link text-dark\" style={{cursor:'pointer'}}\r\n        onClick={()=>{salir()}}>\r\n        Salir\r\n      </span>\r\n    </Fragment>\r\n  )\r\n}\r\n","import React,{Fragment} from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function NavCliente() {\r\n  return (\r\n    <Fragment>\r\n      <Link className=\"nav-link text-dark\" to='/'>Home</Link>     \r\n      <Link className=\"nav-link text-dark\" to='/login'>Login</Link>\r\n    </Fragment>\r\n  )\r\n}","import React,{useState,useContext} from 'react'\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {AuthFireContext} from \"../context/authFireContext\"\r\nimport Swal from 'sweetalert2'\r\nimport NavAdmin from \"./NavAdmin\"\r\nimport NavCliente from \"./NavCliente\"\r\n\r\nexport default function NavBar(){\r\n  const [estaColapsado, setEstaColapsado] = useState(true);\r\n  const manejarColapso = () => setEstaColapsado(!estaColapsado);\r\n  const {userId, setAuthUserId} = useContext(AuthFireContext)\r\n  let history = useHistory()\r\n  \r\n  const salir = () => {\r\n    Swal.fire({\r\n      icon:\"warning\",\r\n      title:\"Desea Salir?\",\r\n      showConfirmButton:true,\r\n      confirmButtonColor: '#3085d6',\r\n      confirmButtonText:'Si',\r\n      showCancelButton:true,\r\n      cancelButtonColor: '#d33',\r\n      cancelButtonText:\"No\"\r\n    })\r\n    .then((result)=>{\r\n      if(result.isDismissed === true){\r\n        return\r\n      }\r\n     \r\n      setAuthUserId(null)\r\n        Swal.fire({        \r\n          icon:'success',\r\n          title:\"Se deslogueo exitosamente\",\r\n          showConfirmButton:false,\r\n          timer:2000\r\n        })\r\n        .then(()=>{\r\n          history.push('/')\r\n        })\r\n     \r\n    })\r\n  }\r\n\r\n  return(\r\n    <div className=\"navbar navbar-expand-lg  navbar-light\" style={{backgroundColor: '#20aee9'}}>\r\n      <div className=\"container\">\r\n        <span className=\"navbar-brand mb-0 h1\">React</span>\r\n        <button \r\n          className=\"navbar-toggler\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#topnav\" \r\n          aria-expanded={!estaColapsado ? true : false}   \r\n          onClick={manejarColapso} \r\n        >\r\n         <span className=\"navbar-toggler-icon\" /> \r\n        </button>                \r\n           <div className={`${estaColapsado ? 'collapse' : ''} navbar-collapse`} id=\"topnav\">   \r\n          {userId == true ? (<NavAdmin salir={salir} />) : <NavCliente/>}\r\n        </div> \r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\nimport Routes from './routes'\nimport {Switch, BrowserRouter as Router} from 'react-router-dom'\nimport NavBar from './Componentes/NavBar'\nimport AuthContextProvider from \"./context/authFireContext\";\n\n\nexport default function App(){\n  return(\n    <Router>\n       <AuthContextProvider>\n       <NavBar/>\n      <div className=\"container\">\n        <Switch>\n          <Routes/>\n        </Switch>\n      </div>\n       </AuthContextProvider>      \n    </Router>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}